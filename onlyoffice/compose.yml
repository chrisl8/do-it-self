services:
  onlyoffice-documentserver:
    build:
      context: .
    image: onlyoffice/documentserver #[-de,-ee]
    container_name: onlyoffice-documentserver
    depends_on:
      - onlyoffice-postgresql
      - onlyoffice-rabbitmq
    environment:
      - DB_TYPE=postgres
      - DB_HOST=onlyoffice-postgresql
      - DB_PORT=5432
      - DB_NAME=onlyoffice
      - DB_USER=onlyoffice
      - AMQP_URI=amqp://guest:guest@onlyoffice-rabbitmq
      # Uncomment strings below to enable the JSON Web Token validation.
      - JWT_ENABLED=true
      - JWT_SECRET=${JWT_SECRET}
      - JWT_HEADER=Authorization
      - JWT_IN_BODY=true
    # ports:
    #   - '80:80'
    #   - '443:443'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/info/info.json"]
      interval: 30s
      retries: 5
      start_period: 60s
      timeout: 10s
    stdin_open: true
    restart: always
    stop_grace_period: 60s
    volumes:
      - /mnt/2000/container-mounts/onlyoffice/data:/var/www/onlyoffice/Data
      - /mnt/2000/container-mounts/onlyoffice/log:/var/log/onlyoffice
      - /mnt/2000/container-mounts/onlyoffice/cache:/var/lib/onlyoffice/documentserver/App_Data/cache/files
      - /mnt/2000/container-mounts/onlyoffice/www:/var/www/onlyoffice/documentserver-example/public/files
      - /mnt/2000/container-mounts/onlyoffice/fonts:/usr/share/fonts
    networks:
      - onlyoffice-net
  onlyoffice-rabbitmq:
    container_name: onlyoffice-rabbitmq
    image: rabbitmq:3
    restart: always
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      retries: 3
      start_period: 10s
      timeout: 10s
    networks:
      - onlyoffice-net
  onlyoffice-postgresql:
    container_name: onlyoffice-postgresql
    image: postgres:15
    environment:
      - POSTGRES_DB=onlyoffice
      - POSTGRES_USER=onlyoffice
      - POSTGRES_HOST_AUTH_METHOD=trust
    restart: always
    volumes:
      - /mnt/2000/container-mounts/onlyoffice/db:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U onlyoffice"]
      interval: 10s
      retries: 3
      start_period: 10s
      timeout: 10s
    networks:
      - onlyoffice-net
  ts:
    container_name: onlyoffice-ts
    image: tailscale/tailscale
    env_file: tailscale.env
    environment:
      - TS_HOSTNAME=onlyoffice
      - TS_EXTRA_ARGS=--advertise-tags=tag:container
      - TS_SERVE_CONFIG=/config/tailscale-config.json
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_ENABLE_HEALTH_CHECK=true
      - TS_LOCAL_ADDR_PORT=127.0.0.1:9002
    volumes:
      - ./tailscale-state:/var/lib/tailscale
      - ./tailscale-config:/config
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    # https://github.com/tailscale/tailscale/issues/12758#issuecomment-2564770640
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:9002/healthz"]
      start_period: 120s
      start_interval: 5s
      interval: 5m
      timeout: 5s
      retries: 3
    networks:
      - onlyoffice-net
    restart: always
    depends_on:
      onlyoffice-documentserver:
        condition: service_healthy
networks:
  onlyoffice-net:
