services:
  caddy:
    container_name: caddy
    user: 1000:1000
    image: caddy
    ports:
      - "443:443"
    volumes:
      - /mnt/2000/container-mounts/caddy/conf:/etc/caddy
      - /mnt/2000/container-mounts/caddy/site:/srv
      - /mnt/2000/container-mounts/caddy/data:/data
      - /mnt/2000/container-mounts/caddy/config:/config
      - /mnt/2000/container-mounts/caddy/logs:/var/log/caddy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -qO - https://www.lofland.com/ | grep -q 'Ekpyrotic Frood Landing Page'",
        ]
      start_period: 120s
      start_interval: 5s
      interval: 5m
      timeout: 5s
      retries: 3
  spacymote:
    container_name: caddy-spacymote
    user: 1000:1000
    build:
      context: ./spacymote
      dockerfile: Dockerfile
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -qO - http://127.0.0.1:3000/ | grep -q '<title>SpacyMote</title>'",
        ]
      start_period: 120s
      start_interval: 5s
      interval: 5m
      timeout: 5s
      retries: 3
  witchazzan:
    container_name: caddy-witchazzan
    user: 1000:1000
    build:
      context: ./Witchazzan
      dockerfile: Dockerfile
    volumes:
      - /mnt/2000/container-mounts/caddy/witchazzan/persistentData:/app/persistentData
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -qO - http://127.0.0.1:8080/ | grep -q '<title>Witchazzan</title>'",
        ]
      start_period: 120s
      start_interval: 5s
      interval: 5m
      timeout: 5s
      retries: 3
  space-game:
    container_name: caddy-space-game
    user: 1000:1000
    build:
      context: ./space-game
      dockerfile: Dockerfile
    volumes:
      - /mnt/2000/container-mounts/caddy/space-game:/space-game
      - ./healthcheck:/healthcheck
    environment:
      - HOME=/space-game
    healthcheck:
      test: ["CMD", "/healthcheck/checkForSpaceGameProcess"]
      start_period: 120s
      start_interval: 5s
      interval: 5m
      timeout: 5s
      retries: 3
  ghost-for-jeriblog:
    container_name: caddy-ghost-for-jeriblog
    image: ghost:5
    environment:
      # see https://ghost.org/docs/config/#configuration-options
      database__client: mysql
      database__connection__host: ghost-db-for-jeriblog
      database__connection__user: root
      database__connection__password: ${MYSQL_ROOT_PASSWORD}
      database__connection__database: ghost
      url: ${GHOST_URL}
      # contrary to the default mentioned in the linked documentation, this image defaults to NODE_ENV=production (so development mode needs to be explicitly specified if desired)
      #NODE_ENV: development
      mail__transport: SMTP
      mail__options__host: ${GHOST_MAIL_HOST}
      mail__options__port: 587
      mail__options__auth__user: ${GHOST_MAIL_USER}
      mail__options__auth__pass: ${GHOST_MAIL_PASSWORD}
      mail__from: ${GHOST_MAIL_FROM}
      mail__to: ${GHOST_MAIL_TO}

    volumes:
      - /mnt/2000/container-mounts/caddy/ghost:/var/lib/ghost/content
      - ./healthcheck:/healthcheck
    depends_on:
      ghost-db-for-jeriblog:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "/healthcheck/get-ghost-page"]
      start_period: 120s
      start_interval: 5s
      interval: 5m
      timeout: 5s
      retries: 3
  ghost-db-for-jeriblog:
    container_name: caddy-ghost-db-for-jeriblog
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - /mnt/2000/container-mounts/caddy/ghost-db:/var/lib/mysql
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-p=${MYSQL_ROOT_PASSWORD}",
        ]
      start_period: 120s
      start_interval: 5s
      interval: 5m
      timeout: 5s
      retries: 3
